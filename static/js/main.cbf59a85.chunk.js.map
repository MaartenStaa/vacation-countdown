{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["FACTORS","DAYS","HOURS","MINUTES","FACTOR_LABELS","timeDiff","now","target","parts","remaining","Math","floor","i","length","factor","n","push","console","log","slice","MAX_FACTORS","join","App","targetDate","useMemo","Date","useState","timeLeft","setTimeLeft","useEffect","interval","setInterval","clearInterval","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMASMA,EAAU,CAFFC,OADDC,MADCC,KADE,GADA,GAOVC,EAAgB,CACpB,CAAC,OAAQ,SACT,CAAC,MAAO,QACR,CAAC,OAAQ,SACT,CAAC,SAAU,WACX,CAAC,SAAU,YAKb,SAASC,EAASC,EAAKC,GAMrB,IALA,IAEMC,EAAQ,GACVC,EAHiBC,KAAKC,OAAOJ,EAASD,GAAO,KAKxCM,EAAI,EAAGA,EAAIZ,EAAQa,SAAUD,EAAG,CACvC,IAAME,EAASd,EAAQY,GACjBG,EAAIL,KAAKC,MAAMF,EAAYK,GACjCL,GAAwBK,EAEd,IAANC,GAIJP,EAAMQ,KAAN,UAAcD,EAAd,YAAmBX,EAAcQ,GAAS,IAANG,EAAU,EAAI,KAIpD,OADAE,QAAQC,IAAIV,EApBM,EAoBcA,EAAMK,OAAQL,EAAMW,SAElDX,EAAMW,MAAM,EAAGC,GAAiBC,KAAK,OACpCb,EAAMK,QAvBS,EAuBf,UACwB,IADxB,gBACwCL,EAAMY,IAC3C,IAgCOE,MA5Bf,WACE,IAAMC,EAAaC,mBAAQ,kBAAM,IAAIC,KAAK,yBAAwB,IADrD,EAEmBC,oBAAS,kBACvCrB,EAAS,IAAIoB,KAAQF,MAHV,mBAENI,EAFM,KAEIC,EAFJ,KAeb,OATAC,qBAAU,WACR,IAAMC,EAAWC,aACf,kBAAMH,EAAYvB,EAAS,IAAIoB,KAAQF,MACvC,KAGF,OAAO,kBAAMS,cAAcF,MAC1B,CAACP,IAGF,sBAAKU,UAAU,MAAf,UACE,qBAAKA,UAAU,mBAEf,wBAAQA,UAAU,aAAlB,SACE,sDAGF,oBAAGA,UAAU,gBAAb,mBAAoCN,EAApC,gBC1DSO,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.cbf59a85.chunk.js","sourcesContent":["import \"./App.css\";\nimport { useEffect, useMemo, useState } from \"react\";\n\nconst SECONDS = 1;\nconst MINUTES = 60;\nconst HOURS = MINUTES * 60;\nconst DAYS = HOURS * 24;\nconst WEEKS = DAYS * 7;\n\nconst FACTORS = [WEEKS, DAYS, HOURS, MINUTES, SECONDS];\nconst FACTOR_LABELS = [\n  [\"week\", \"weeks\"],\n  [\"day\", \"days\"],\n  [\"hour\", \"hours\"],\n  [\"minute\", \"minutes\"],\n  [\"second\", \"seconds\"],\n];\n\nconst MAX_FACTORS = 3;\n\nfunction timeDiff(now, target) {\n  const totalSeconds = Math.floor((target - now) / 1000);\n\n  const parts = [];\n  let remaining = totalSeconds;\n  // for (const factor of [WEEKS, DAYS, HOURS, MINUTES]) {\n  for (let i = 0; i < FACTORS.length; ++i) {\n    const factor = FACTORS[i];\n    const n = Math.floor(remaining / factor);\n    remaining = remaining % factor;\n\n    if (n === 0) {\n      continue;\n    }\n\n    parts.push(`${n} ${FACTOR_LABELS[i][n === 1 ? 0 : 1]}`);\n  }\n\n  console.log(parts, MAX_FACTORS, parts.length, parts.slice());\n  return (\n    parts.slice(0, MAX_FACTORS - 1).join(\", \") +\n    (parts.length >= MAX_FACTORS\n      ? `${MAX_FACTORS > 2 ? \",\" : \"\"} and ${parts[MAX_FACTORS - 1]}`\n      : \"\")\n  );\n}\n\nfunction App() {\n  const targetDate = useMemo(() => new Date(\"2021-09-18 10:20:00\"), []);\n  const [timeLeft, setTimeLeft] = useState(() =>\n    timeDiff(new Date(), targetDate)\n  );\n\n  useEffect(() => {\n    const interval = setInterval(\n      () => setTimeLeft(timeDiff(new Date(), targetDate)),\n      1000\n    );\n\n    return () => clearInterval(interval);\n  }, [targetDate]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-background\" />\n\n      <header className=\"App-header\">\n        <h1>Vacation countdown</h1>\n      </header>\n\n      <p className=\"App-countdown\"> Only {timeLeft} left!</p>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}